{"version":3,"sources":["ultis/functions.js","components/GlobalModal/index.js","pages/SignIn/redux/actions.js","ultis/api.js","pages/SignIn/redux/epics.js","core/epic.js","pages/SignIn/redux/reducer.js","core/reducer.js","core/store.js","components/CInput/index.jsx","assets/images/forgot_password.jpg","assets/logo.png","pages/CreatePassword/index.jsx","pages/ForgotPassword/index.jsx","components/Footer/index.jsx","components/Header/index.jsx","ultis/i18n.js","assets/i18n/strings.js","pages/Home/index.jsx","assets/images/signin.png","pages/SignIn/index.jsx","assets/images/signup.png","pages/SignUp/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["history","createHashHistory","forceRefresh","MODAL_TYPE","ROLES","Object","freeze","STUDENT","TEACHER","ADMIN","NOT_VERIFIED","Text","Typography","GlobalModal","props","closeModal","instance","setState","isShow","handleOk","state","onPress","handleCancel","title","content","type","visible","centered","onOk","onCancel","footer","onClick","size","React","Component","alertMessage","iTitle","iContent","iType","SignInRequest","defineAction","SignInRequestSuccess","SignInRequestFailed","SignUpRequest","SignUpRequestSuccess","SignUpRequestFailed","ResetPassword","ResetPasswordSuccess","ResetPasswordFailed","CreatePassword","CreatePasswordSuccess","CreatePasswordFailed","ChangePassword","ChangePasswordSuccess","ChangePasswordFailed","GetProfile","GetProfileSuccess","GetProfileFailed","UpdateProfile","UpdateProfileSuccess","UpdateProfileFailed","VerifyEmail","VerifyEmailSuccess","VerifyEmailFailed","GetWatchlist","GetWatchlistSuccess","GetWatchlistFailed","RefreshToken","RefreshTokenSuccess","RefreshTokenFailed","SignOut","request","param","url","parameters","store","getState","Auth","token","prevLogin","refreshToken","Date","getTime","dispatch","get","accessToken","headers","accept","Authorization","from","axios","timeout","method","data","params","catch","error","Promise","resolve","response","pipe","map","result","tap","JSON","stringify","log","authEpics","combineEpics","action$","ofType","exhaustMap","action","payload","status","authenticated","message","catchError","role","replace","id","push","pathname","rootEpic","initialState","user","isLoading","isLoadingProfile","watchlist","rootReducer","combineReducers","router","connectRouter","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","routerMiddleware","persistConfig","logger","key","storage","persistedReducer","persistReducer","createStore","compose","run","persistor","persistStore","CInput","style","width","marginBottom","className","CreatePasswordPage","useParams","useHistory","useDispatch","useSelector","isDesktopOrLaptop","useMediaQuery","minDeviceWidth","useEffect","validationSchema","yup","shape","password","required","min","max","matches","confirm","oneOf","handleCreate","values","handleKeyPress","isValid","event","href","textDecoration","color","src","logo","alt","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","onKeyPress","marginTop","disabled","backgroundImage","forgotPic","ForgotPassword","email","trim","label","handleForgot","toLowerCase","alignSelf","padding","Layout","Footer","FooterComponent","Search","Input","Link","Anchor","AppHeader","useState","setVisible","useTranslation","t","studentPopover","i18n","Item","adminPopover","display","borderRadius","marginRight","enterButton","onSearch","keyword","test","search","borderWidth","avatar","placement","trigger","icon","UserOutlined","console","info","MenuOutlined","closable","onClose","targetOffset","allowClear","fontFamily","fontWeight","paddingTop","fullName","alignItems","justifyContent","marginBlock","resources","en","translation","auth","login","signup","signin","vi","use","initReactI18next","init","lng","debug","interpolation","escapeValue","Home","Header","changeLanguage","SignIn","location","goBack","handleLogin","signinPic","SignUp","handleSignup","signupPic","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","Provider","verticalAlign","document","getElementById"],"mappings":"gVAEaA,EAAUC,YAAkB,CAAEC,cAAc,IAc5CC,EACH,SAIGC,EAAQC,OAAOC,OAAO,CACjCC,QAAS,EACTC,QAAS,EACTC,MAAO,EACPC,aAAc,I,WCrBRC,EAASC,IAATD,KAEaE,E,kDAGnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA0BRC,WAAa,WACXF,EAAYG,SAASC,SAAS,CAAEC,QAAQ,KA5BvB,EA+BnBC,SAAW,WACTN,EAAYG,SAASI,MAAMC,UAC3BR,EAAYG,SAASD,cAjCJ,EAoCnBO,aAAe,WACbT,EAAYG,SAASD,cAnCrBF,EAAYG,SAAZ,eACA,EAAKI,MAAQ,CACXF,QAAQ,EACRK,MAAO,GACPC,QAAS,GACTC,KAAMtB,EACNkB,QAAS,cARM,E,0CAwCnB,WACE,OACE,cAAC,IAAD,CACEE,MAAOV,EAAYG,SAASI,MAAMG,MAClCG,QAASb,EAAYG,SAASI,MAAMF,OACpCS,UAAQ,EACRC,KAAMf,EAAYG,SAASG,SAC3BU,SAAUhB,EAAYG,SAASM,aAC/BQ,OACEjB,EAAYG,SAASI,MAAMK,OAAStB,EAChC,CACE,cAAC,IAAD,CAEEsB,KAAK,UACLM,QAASlB,EAAYG,SAASG,SAC9Ba,KAAK,QAJP,eACM,aAQR,CACE,cAAC,IAAD,CAEED,QAASlB,EAAYG,SAASM,aAC9BU,KAAK,QAHP,mBACM,gBAMN,cAAC,IAAD,CAEEA,KAAK,QACLP,KAAK,UACLM,QAASlB,EAAYG,SAASG,SAJhC,eACM,aA3BhB,SAqCE,cAACR,EAAD,UAAOE,EAAYG,SAASI,MAAMI,gB,GAlFDS,IAAMC,WAA1BrB,EACZG,SAAW,KADCH,EAeZsB,aAAe,WAKhB,IAJJC,EAIG,uDAJM,cACTC,EAGG,uDAHQ,oDACXC,EAEG,uDAFKnC,EACRkB,EACG,uDADO,aAEVR,EAAYG,SAASC,SAAS,CAC5BC,QAAQ,EACRK,MAAOa,EACPZ,QAASa,EACTZ,KAAMa,EACNjB,a,kKC9BOkB,EAAgBC,YAAa,kBAC7BC,EAAuBD,YAAa,0BACpCE,EAAsBF,YAAa,yBAEnCG,EAAgBH,YAAa,kBAC7BI,EAAuBJ,YAAa,0BACpCK,EAAsBL,YAAa,yBAEnCM,EAAgBN,YAAa,0BAC7BO,EAAuBP,YAAa,0BACpCQ,EAAsBR,YAAa,yBAEnCS,EAAiBT,YAAa,2BAC9BU,EAAwBV,YAAa,2BACrCW,EAAuBX,YAAa,0BAEpCY,EAAiBZ,YAAa,2BAC9Ba,EAAwBb,YAAa,2BACrCc,EAAuBd,YAAa,0BAEpCe,GAAaf,YAAa,uBAC1BgB,GAAoBhB,YAAa,uBACjCiB,GAAmBjB,YAAa,sBAEhCkB,GAAgBlB,YAAa,0BAC7BmB,GAAuBnB,YAAa,0BACpCoB,GAAsBpB,YAAa,yBAEnCqB,GAAcrB,YAAa,gBAC3BsB,GAAqBtB,YAAa,wBAClCuB,GAAoBvB,YAAa,uBAEjCwB,GAAexB,YAAa,yBAC5ByB,GAAsBzB,YAAa,yBACnC0B,GAAqB1B,YAAa,wBAElC2B,GAAe3B,YAAa,yBAC5B4B,GAAsB5B,YAAa,yBACnC6B,GAAqB7B,YAAa,wBAElC8B,GAAU9B,YAAa,mB,IAETA,YAAa,gB,kBCrCjC,SAAS+B,GAAQC,GACtB,IAAIC,EAAG,UHJa,qCGIb,YAAgBD,EAAMC,KAGvBC,EAAaF,EAAMA,MAJI,EAKcG,GAAMC,WAAWC,KAApDC,EALqB,EAKrBA,MAAOC,EALc,EAKdA,UAAWC,EALG,EAKHA,aACtBD,IACE,IAAIE,MAAOC,UAAYH,EAAY,MACrCJ,GAAMQ,SAAShB,GAAaiB,IAAI,CAAEC,YAAaP,EAAOE,kBAG1D,IAAMM,EAAUR,EACZ,CACE,eAAgB,mBAChBS,OAAQ,mBACR,+BAA+B,EAC/B,kBAbW,KAcXC,cAAeV,GAEjB,CACE,eAAgB,mBAChBS,OAAQ,mBACR,+BAA+B,EAC/B,kBApBW,MAuBjB,OAAOE,aACLC,IACGnB,QADH,aAEIE,MACAkB,QAAS,KACTL,UACAM,OAAQpB,EAAMoB,QAAU,OACxBC,KAAMnB,GACe,QAAjBF,EAAMoB,OACN,CAAEE,OAAQpB,EAAYmB,KAAM,IAC5B,CAAEA,KAAMnB,KAEbqB,OAAM,SAAAC,GACL,OAAOC,QAAQC,QAAQF,EAAMG,cAEjCC,KACAC,aAAI,SAAAC,GACF,OAAOA,KAETC,cAAI,SAAAD,GAAM,OAId,SAAa7B,EAAKC,EAAY4B,GAY1BE,KAAKC,UAAU/B,EAAY,KAAM,YAIjC8B,KAAKC,UAAUH,EAAQ,KAAM,YApBfI,CAAIjC,EAAKC,EAAY4B,OCXvC,IA8QaK,GAAYC,aA9QL,SAAAC,GAAO,OACzBA,EAAQT,KACNU,YAAOvE,EAAcd,MACrBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,aACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GAAW,IAAD,EACZ,OAAsB,MAAlBA,EAAOY,SAAP,UAAyBZ,EAAOT,YAAhC,aAAyB,EAAasB,eACjC1E,EAAqB2C,IAAIkB,EAAOT,OAEzChF,EAAYsB,aACV,cACA,wDAEKO,EAAoB0C,IAAIkB,EAAOT,KAAKuB,aAE7CC,aAAW,SAAArB,GACT,OAAOtD,EAAoB0C,IAAIY,cAMrB,SAAAa,GAAO,OACzBA,EAAQT,KACNU,YAAOnE,EAAclB,MACrBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,cACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GAAW,IAAD,EACZ,OAAsB,MAAlBA,EAAOY,QACLF,EAAOC,QAAQK,OAASlH,EAAMI,UAGhCmE,GAAMQ,SAASoC,YAAQ,UAAW,CAAE9B,KAAM,aAC1C5E,EAAYsB,aACV,cACA,iDAGGS,EAAqBwC,IAAIkB,EAAOT,QAEzChF,EAAYsB,aAAa,cAAzB,UAAwCmE,EAAOT,YAA/C,aAAwC,EAAauB,SAC9CvE,EAAoBuC,IAAIkB,OAEjCe,aAAW,SAAArB,GACT,OAAOnD,EAAoBuC,IAAIY,cAmId,SAAAa,GAAO,OAChCA,EAAQT,KACNU,YAAOhE,EAAcrB,MACrBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,qBACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GACF,OAAsB,MAAlBA,EAAOY,QACTrG,EAAYsB,aACV,cACAmE,EAAOT,KAAKuB,QACZjH,GACA,kBAAMwE,GAAMQ,SAASoC,YAAQ,SAExBxE,EAAqBqC,IAAIkB,EAAOT,QAEzChF,EAAYsB,eACLa,EAAoBoC,IAAIkB,OAEjCe,aAAW,SAAArB,GACT,OAAOhD,EAAoBoC,IAAIY,cAMb,SAAAa,GAAO,OACjCA,EAAQT,KACNU,YAAO7D,EAAexB,MACtBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,sBACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GACF,OAAsB,MAAlBA,EAAOY,QACTrG,EAAYsB,aACV,cACAmE,EAAOT,KAAKuB,QACZjH,GACA,kBAAMwE,GAAMQ,SAASoC,YAAQ,eAExBrE,EAAsBkC,IAAIkB,EAAOT,QAE1ChF,EAAYsB,eACLgB,EAAqBiC,IAAIkB,OAElCe,aAAW,SAAArB,GACT,OAAO7C,EAAqBiC,IAAIY,cAMjB,SAAAa,GAAO,OAC9BA,EAAQT,KACNU,YAAOjD,GAAYpC,MACnBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,mBACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GAAW,IAAD,EACZ,OAAsB,MAAlBA,EAAOY,QACTrG,EAAYsB,aACV,cACAmE,EAAOT,KAAKuB,QACZjH,GACA,kBAAMwE,GAAMQ,SAASoC,YAAQ,SAExBzD,GAAmBsB,IAAIkB,EAAOT,QAEvChF,EAAYsB,aAAa,cAAzB,UAAwCmE,EAAOT,YAA/C,aAAwC,EAAauB,SAC9CrD,GAAkBqB,IAAIkB,OAE/Be,aAAW,SAAArB,GACT,OAAOjC,GAAkBqB,IAAIY,cA9Mf,SAAAa,GAAO,OAC7BA,EAAQT,KACNU,YAAO1D,EAAe3B,MACtBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAI,SAAD,OAAWuC,EAAOC,QAAQO,GAA1B,mBACHhD,MAAOwC,EAAOC,QAAQpB,OACrBO,KACDC,aAAI,SAAAC,GAAW,IAAD,EACZ,OAAsB,MAAlBA,EAAOY,QACTrG,EAAYsB,aACV,cACA,uDACAhC,GACA,WACEwE,GAAMQ,SAASb,GAAQc,OACvBpF,EAAQyH,KAAK,CACXC,SAAU,UACVtG,MAAO,CAAEqE,KAAK,iBAIbpC,EAAsB+B,IAAIkB,EAAOT,QAE1ChF,EAAYsB,aAAa,cAAzB,UAAwCmE,EAAOT,YAA/C,aAAwC,EAAauB,SAC9C9D,EAAqB8B,IAAIkB,OAElCe,aAAW,SAAArB,GACT,OAAO1C,EAAqB8B,IAAIY,cAgDX,SAAAa,GAAO,OACpCA,EAAQT,KACNU,YAAOpD,GAAcjC,MACrBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,QACRnB,IAAI,SAAD,OAAWuC,EAAOC,QAAQO,IAC7BhD,MAAOwC,EAAOC,QAAQpB,OACrBO,KACDC,aAAI,SAAAC,GAAW,IAAD,EACZ,OAAsB,MAAlBA,EAAOY,QACTvC,GAAMQ,SAAS5B,GAAW6B,IAAI4B,EAAOC,QAAQO,KAC7C3G,EAAYsB,aAAa,cAAe,2BACjCwB,GAAqByB,IAAIkB,EAAOT,QAEzChF,EAAYsB,aAAa,cAAzB,UAAwCmE,EAAOT,YAA/C,aAAwC,EAAauB,SAC9CxD,GAAoBwB,IAAIkB,OAEjCe,aAAW,SAAArB,GACT,OAAOpC,GAAoBwB,IAAIY,cA7DjB,SAAAa,GAAO,OAC7BA,EAAQT,KACNU,YAAOvD,GAAW9B,MAClBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,MACRnB,IAAI,SAAD,OAAWuC,EAAOC,WACpBb,KACDC,aAAI,SAAAC,GACF,OAAsB,MAAlBA,EAAOY,OACF1D,GAAkB4B,IAAIkB,EAAOT,MAE/BpC,GAAiB2B,IAAIkB,MAE9Be,aAAW,SAAArB,GACT,OAAOvC,GAAiB2B,IAAIY,cAMZ,SAAAa,GAAO,OAC/BA,EAAQT,KACNU,YAAO9C,GAAavC,MACpBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,MACRnB,IAAI,SAAD,OAAWuC,EAAOC,QAAlB,gBACFb,KACDC,aAAI,SAAAC,GACF,OAAsB,MAAlBA,EAAOY,OACFjD,GAAoBmB,IAAIkB,EAAOT,MAEjC3B,GAAmBkB,IAAIkB,MAEhCe,aAAW,SAAArB,GACT,OAAO9B,GAAmBkB,IAAIY,cA+Bd,SAAAa,GAAO,OAC/BA,EAAQT,KACNU,YAAO3C,GAAa1C,MACpBsF,aAAW,SAAAC,GACT,OAAOzC,GAAQ,CACbqB,OAAQ,OACRnB,IAAK,eACLD,MAAOwC,EAAOC,UACbb,KACDC,aAAI,SAAAC,GACF,OAAsB,MAAlBA,EAAOY,OACF9C,GAAoBgB,IAAIkB,EAAOT,OAExChF,EAAYsB,eACLkC,GAAmBe,IAAIkB,OAEhCe,aAAW,SAAArB,GACT,OAAO3B,GAAmBe,IAAIY,cCvN3B2B,GAAWf,YAAaD,I,UCc/BiB,GAAe,CACnB9C,MAAO,KACPE,aAAc,KACd6C,KAAM,KACNC,WAAW,EACXC,kBAAkB,EAClBC,UAAW,GACXjD,UAAW,MCnBN,IAAMkD,GAAcC,YAAgB,CACzCrD,KDqBK,WAAoD,IAA/BzD,EAA8B,uDAAtBwG,GAAcZ,EAAQ,uCACxD,OAAQA,EAAOvF,MACb,KAAKgB,EAAqBhB,KACxB,OAAO,2BACFL,GADL,IAEE0D,MAAOkC,EAAOC,QAAQ5B,YACtBL,aAAcgC,EAAOC,QAAQjC,aAC7B6C,KAAMb,EAAOC,QACblC,WAAW,IAAIE,MAAOC,YAE1B,KAAKxB,GAAcjC,KACjB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAChC,KAAKnE,GAAqBlC,KAE1B,KAAKmC,GAAoBnC,KACvB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAChC,KAAKvE,GAAW9B,KACd,OAAO,2BAAKL,GAAZ,IAAmB2G,kBAAkB,IACvC,KAAKvE,GAAkB/B,KACrB,OAAO,2BACFL,GADL,IAEEyG,KAAK,2BAAMzG,EAAMyG,MAASb,EAAOC,SACjCc,kBAAkB,IAEtB,KAAKtE,GAAiBhC,KACpB,OAAO,2BAAKL,GAAZ,IAAmB2G,kBAAkB,IACvC,KAAK/D,GAAavC,KAChB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAChC,KAAK7D,GAAoBxC,KACvB,OAAO,2BACFL,GADL,IAEE4G,UAAWhB,EAAOC,QAClBa,WAAW,IAEf,KAAK5D,GAAmBzC,KACtB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAWhC,KAAK1D,GAAoB3C,KACvB,OAAO,2BACFL,GADL,IAEE0D,MAAOkC,EAAOC,QAAQ5B,YACtBwC,KAAK,2BAAMzG,EAAMyG,MAAb,IAAmB/C,MAAOkC,EAAOC,QAAQ5B,cAC7CN,WAAW,IAAIE,MAAOC,YAE1B,KAAK9B,EAAe3B,KAClB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAChC,KAAKzE,EAAsB5B,KAE3B,KAAK6B,EAAqB7B,KACxB,OAAO,2BAAKL,GAAZ,IAAmB0G,WAAW,IAChC,KAAKxD,GAAQ7C,KACX,OAAOmG,GACT,QACE,OAAOxG,IClFX+G,OAAQC,aAAcpI,KCGlBqI,GAAiBC,cAEjBC,GAAqBC,YACzBH,GACAI,YAAiBzI,IAQb0I,IANqBF,YACzBG,IACAN,GACAI,YAAiBzI,IAGG,CACpB4I,IAAK,OACLC,cAGIC,GAAmBC,YAAeL,GAAeT,IAE1CtD,GAAQqE,YACnBF,GACwCG,YAAQV,KAGlDF,GAAea,IAAIvB,IAEZ,IAAMwB,GAAYC,YAAazE,I,kECvBvB0E,OATf,SAAgBvI,GACd,OACE,sBAAKwI,MAAO,CAAEC,MAAO,OAAQC,aAAc,IAA3C,UACE,cAAC,KAAD,eAAW1I,IACVA,EAAMkF,OAAS,sBAAMyD,UAAU,aAAhB,SAA8B3I,EAAMkF,Y,oCCR3C,OAA0B,4CCA1B,OAA0B,iCC0I1B0D,OA7Hf,WACE,IACQ5E,EADM6E,eACN7E,MACF9E,EAAU4J,eACVzE,EAAW0E,eACXhC,EAAOiC,cAAY,SAAA1I,GAAK,uBAAIA,EAAMyD,YAAV,aAAI,EAAYgD,QACxCkC,EAAoBC,yBAAc,CAAEC,eAAgB,OAE1DC,qBAAU,YACJrC,GAAS/C,GACX9E,EAAQuH,QAAQ,OAEjB,CAACM,IAEJ,IAAMsC,EAAmBC,OAAaC,MAAM,CAC1CC,SAAUF,OAEPG,SAAS,2BACTC,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACRC,QAAQ,YAAa,CACpBtD,QAAS,gDAEbuD,QAASP,OAENG,SAAS,2BACTC,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACRC,QAAQ,YAAa,CACpBtD,QAAS,gDAEVwD,MACC,CAACR,KAAQ,YAAa,MACtB,mDAIAS,EAAe,SAAAC,GACnB3F,EACElC,EAAemC,IAAI,CACjBkF,SAAUQ,EAAOR,SACjBxF,MAAOA,MAKPiG,EAAiB,SAACC,EAASC,EAAOH,GAClCE,GAAyB,UAAdC,EAAMrC,KACnBiC,EAAaC,IAIjB,OACE,sBAAKtD,GAAG,KAAR,UACE,sBAAKA,GAAG,UAAR,UACE,mBAAG0D,KAAK,IAAI5B,MAAO,CAAE6B,eAAgB,OAAQC,MAAO,SAApD,SACE,qBAAKC,IAAKC,GAAMC,IAAI,OAAOhC,MAAO,QAEpC,qBAAK/B,GAAG,WAAR,SACE,cAAC,KAAD,CACEgE,cAAe,CACblB,SAAU,GACVK,QAAS,IAEXc,gBAAgB,EAChBtB,iBAAkBA,EAClBuB,SAAU,SAAAZ,GAAM,OAAID,EAAaC,IAPnC,SASG,YASM,IARLa,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,aACAf,EAKI,EALJA,OACAE,EAII,EAJJA,QACAc,EAGI,EAHJA,OAEAC,GACI,EAFJC,QAEI,EADJD,iBAEA,OACE,eAAC,KAAD,CAAMtC,UAAU,YAAhB,UACE,sBAAMjC,GAAG,aAAT,4CACA,cAAC,GAAD,CACEiC,UAAU,WACVwC,MAAOnB,EAAOR,SACd4B,SAAUP,EAAa,YACvBQ,aAAc,kBAAMJ,EAAgB,aACpCK,OAAQR,EAAW,YACnBS,YAAY,eACZC,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOxB,SACd7I,KAAK,aAEP,cAAC,GAAD,CACEgI,UAAU,WACVwC,MAAOnB,EAAOH,QACduB,SAAUP,EAAa,WACvBQ,aAAc,kBAAMJ,EAAgB,YACpCK,OAAQR,EAAW,WACnBS,YAAY,mBACZC,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOnB,QACdlJ,KAAK,aAEP,cAAC,IAAD,CACE6H,MAAO,CAAEiD,UAAW,IACpB/E,GAAG,WACHgF,UAAWxB,EACXvJ,KAAK,UACLM,QAAS8J,EALX,uCAeX9B,GACC,qBAAKvC,GAAG,QAAQ8B,MAAO,CAAEmD,gBAAgB,OAAD,OAASC,GAAT,YCLjCC,OAlHf,WACE,IAAM3M,EAAU4J,eACVzE,EAAW0E,eACXhC,EAAOiC,cAAY,SAAA1I,GAAK,uBAAIA,EAAMyD,YAAV,aAAI,EAAYgD,QACxCkC,EAAoBC,yBAAc,CAAEC,eAAgB,OAE1DC,qBAAU,WACJrC,GACF7H,EAAQuH,QAAQ,OAEjB,CAACM,IAEJ,IAAMsC,EAAmBC,OAAaC,MAAM,CAC1CuC,MAAOxC,OAEJyC,OACApC,IAAI,GAAI,yCACRqC,MAAM,SACNF,MAAM,iBACNrC,SAAS,0BAGRwC,EAAe,SAAAjC,GACnB3F,EACErC,EAAcsC,IAAd,2BACK0F,GADL,IAEE8B,MAAO9B,EAAO8B,MAAMI,mBAW1B,OACE,sBAAKxF,GAAG,KAAR,UACE,sBAAKA,GAAG,UAAR,UACE,mBAAG0D,KAAK,IAAI5B,MAAO,CAAE6B,eAAgB,OAAQC,MAAO,SAApD,SACE,qBAAKC,IAAKC,GAAMC,IAAI,SAAShC,MAAO,QAEtC,qBAAK/B,GAAG,WAAR,SACE,cAAC,KAAD,CACEgE,cAAe,CACboB,MAAO,IAETnB,gBAAgB,EAChBtB,iBAAkBA,EAClBuB,SAAU,SAAAZ,GAAM,OAAIiC,EAAajC,IANnC,SAQG,YASM,IARLa,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,aACAf,EAKI,EALJA,OACAE,EAII,EAJJA,QACAc,EAGI,EAHJA,OAEAC,GACI,EAFJC,QAEI,EADJD,iBAEA,OACE,eAAC,KAAD,CAAMtC,UAAU,YAAhB,UACE,sBAAMjC,GAAG,aAAT,4DAGA,cAAC,GAAD,CACEiC,UAAU,WACVwC,MAAOnB,EAAO8B,MACdV,SAAUP,EAAa,SACvBQ,aAAc,kBAAMJ,EAAgB,UACpCK,OAAQR,EAAW,SACnBS,YAAY,QACZC,WAAY,SAAArB,GAAK,OA3CZ,SAACD,EAASC,EAAOH,GAClCE,GAAyB,UAAdC,EAAMrC,KACnBmE,EAAajC,GAyCsBC,CAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOc,QAEhB,sBAAKtD,MAAO,CAAE2D,UAAW,WAAYzD,aAAc,IAAnD,UACE,6DACA,cAAC,IAAD,CACEF,MAAO,CAAE4D,QAAS,GAClB9B,MAAM,UACN3J,KAAK,OACLM,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,UACVtG,MAAO,CAAEqE,KAAK,cAPpB,gCAcF,cAAC,IAAD,CACE+B,GAAG,WACHgF,UAAWxB,EACXvJ,KAAK,UACLM,QAAS8J,EAJX,gCAcX9B,GACC,qBAAKvC,GAAG,QAAQ8B,MAAO,CAAEmD,gBAAgB,OAAD,OAASC,GAAT,Y,OCtH7BS,EAAXC,OAkBOC,I,0FCZPC,GAAWC,KAAXD,OACAE,GAASC,KAATD,KAoSOE,OAlSf,SAAmB5M,GAAQ,IAAD,EACM6M,oBAAS,GADf,oBACjBjM,EADiB,KACRkM,EADQ,KAElB5N,EAAU4J,eACV/B,EAAOiC,cAAY,SAAA1I,GAAK,OAAIA,EAAMyD,KAAKgD,QACvC1C,EAAW0E,eAJO,EAKJgE,eAAZC,EALgB,EAKhBA,EAWFC,GAhBkB,EAKbC,KAYT,eAAC,KAAD,CAAM1E,MAAO,CAAEC,MAAO,KAAtB,UACE,cAAC,KAAK0E,KAAN,CAEElM,QAAS,WACP/B,EAAQyH,KAAR,aAHJ,oBACO,WAOP,cAAC,KAAKwG,KAAN,CAEElM,QAAS,WACP/B,EAAQyH,KAAR,gBAHJ,uBACO,UAOP,cAAC,KAAKwG,KAAN,CAEElM,QAAS,WACPoD,EAASb,GAAQc,QAHrB,oBACO,cAUL8I,EACJ,eAAC,KAAD,CAAM5E,MAAO,CAAEC,MAAO,KAAtB,UACE,cAAC,KAAK0E,KAAN,CAEElM,QAAS,WACP/B,EAAQyH,KAAR,aAHJ,oBACO,WAOP,cAAC,KAAKwG,KAAN,CAEElM,QAAS,WACP/B,EAAQyH,KAAR,WAHJ,sBACO,aAOP,cAAC,KAAKwG,KAAN,CAEElM,QAAS,WACPoD,EAASb,GAAQc,QAHrB,oBACO,aAUX,OACE,qBAAKqE,UAAU,kBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKH,MAAO,CAAE6E,QAAS,QAAvB,SACE,qBAAK3G,GAAG,OAAR,SACE,sBACEA,GAAG,WACHzF,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,IACVtG,MAAO,CAAEqE,KAAK,QALpB,yBA2BJ,sBAAKgE,UAAU,eAAf,YACqB,eAAX,OAAL3I,QAAK,IAALA,OAAA,EAAAA,EAAO2E,SAA6B,OAAJoC,QAAI,IAAJA,OAAA,EAAAA,EAAMP,QAASlH,EAAMI,SACtD,cAAC,IAAD,CACEiB,KAAK,UACL6H,MAAO,CAAE8E,aAAc,GAAIC,YAAa,IACxCtM,QAAS,kBAAM/B,EAAQyH,KAAK,YAH9B,4BAQc,KAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMP,MACL,gCACE,cAACgG,GAAD,CACEhE,MAAO,CAAEC,MAAO,QAChB8C,YAAY,yCACZiC,YAAY,SACZtM,KAAK,QACLuM,SAAU,SAAAtC,GACR,IAAMuC,EAAUvC,EAAMY,OAClB,MAAM4B,KAAKD,IAEbxO,EAAQyH,KAAK,CACXC,SAAS,WACTgH,OAAO,WAAD,OAAaF,GACnBpN,MAAO,CAAEqE,KAAK,UAKtB,cAAC,IAAD,CACE4E,MAAM,QACNf,MAAO,CAAEqF,YAAa,GACtBnH,GAAG,SACHzF,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,WACVtG,MAAO,CAAEqE,KAAK,QAPpB,qBAaA,cAAC,IAAD,CACE4E,MAAM,QACNf,MAAO,CAAEqF,YAAa,EAAGN,YAAa,IACtC7G,GAAG,SACHzF,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,SACVtG,MAAO,CAAEqE,KAAK,QAPpB,sBAeF,wBAGDoC,GACK,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM+G,QACJ,cAAC,KAAD,CACEC,UAAU,cACVrN,SACM,OAAJqG,QAAI,IAAJA,OAAA,EAAAA,EAAMP,QAASlH,EAAMK,MAAQyN,EAAeH,EAE9Ce,QAAQ,QALV,SAOE,cAAC,KAAD,CAAQ9M,KAAM,GAAIqJ,IAAG,OAAExD,QAAF,IAAEA,OAAF,EAAEA,EAAM+G,WAG/B,cAAC,KAAD,CACEC,UAAU,cACVrN,SACM,OAAJqG,QAAI,IAAJA,OAAA,EAAAA,EAAMP,QAASlH,EAAMK,MAAQyN,EAAeH,EAE9Ce,QAAQ,QALV,SAOE,cAAC,KAAD,CAAQ9M,KAAM,GAAI+M,KAAM,cAACC,GAAA,EAAD,QAI5B,cAAC,IAAD,CACEvN,KAAK,UACL6H,MAAO,CAAE8E,aAAc,IACvBrM,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,UACVtG,MAAO,CAAEqE,KAAK,QANpB,SAUGqI,EAAE,mBAIT,sBAAKrE,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQhI,KAAK,UAAUM,QArMZ,WACjBkN,QAAQC,KAAK,QACbtB,GAAW,IAmML,SACE,cAACuB,GAAA,EAAD,MAEF,cAAC,KAAD,CACEN,UAAU,QACVO,UAAU,EACVC,QAtMM,WACdzB,GAAW,IAsMHlM,QAASA,EAJX,SAME,eAAC,KAAD,CAAQ4N,aAAa,KAArB,UACkB,KAAX,OAAJzH,QAAI,IAAJA,OAAA,EAAAA,EAAMP,MACL,cAACgG,GAAD,CACEiC,YAAU,EACVlD,YAAY,SACZkC,SAAU,SAAAtC,GAAK,OAAInL,EAAMyN,SAAStC,IAClCqC,YAAa,WAGf,wBAEDzG,EACC,cAAC,KAAD,CACEgH,UAAU,cACVrN,SACM,OAAJqG,QAAI,IAAJA,OAAA,EAAAA,EAAMP,QAASlH,EAAMK,MAAQyN,EAAeH,EAE9Ce,QAAQ,QALV,SAOE,mBACErF,UAAU,kBACVH,MAAO,CACLkG,WAAY,kBACZC,WAAY,OACZC,WAAY,IALhB,SAQG7H,EAAK8H,aAIV,wBAEc,KAAX,OAAJ9H,QAAI,IAAJA,OAAA,EAAAA,EAAMP,MACL,8BAEE,cAACkG,GAAD,CAAMtC,KAAK,SAAS3J,MAAM,YAG5B,0BAEiB,eAAX,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAO2E,SACJ,OAAJoC,QAAI,IAAJA,OAAA,EAAAA,EAAMP,QAASlH,EAAMI,SACnB,cAACgN,GAAD,CAAMtC,KAAK,UAAU3J,MAAM,mBAE7BsG,EAsBA,wBArBA,qBACEyB,MAAO,CACL6E,QAAS,OACTyB,WAAY,SACZC,eAAgB,UAJpB,SAOE,cAAC,IAAD,CACEpO,KAAK,UACL6H,MAAO,CAAE8E,aAAc,GAAI7E,MAAO,MAAOuG,YAAa,IACtD/N,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,UACVtG,MAAO,CAAEqE,KAAK,QANpB,SAUGqI,EAAE,gC,oCC1RjBiC,GAAY,CAChBC,GAAI,CACFC,YCRc,CAChBxB,KAAM,KACNyB,KAAM,CACJC,MAAO,QACPC,OAAQ,WAEVC,OAAQ,CACNzD,MAAO,QACPtC,SAAU,cDEZgG,GAAI,CACFL,YCCc,CAChBxB,KAAM,UACNyB,KAAM,CACJC,MAAO,2BACPC,OAAQ,wBAEVC,OAAQ,CACNzD,MAAO,QACPtC,SAAU,yBDLd0D,KACGuC,IAAIC,MACJC,KAAK,CACJV,aACAW,IAAK,KACLC,OAAO,EACPC,cAAe,CACbC,aAAa,KAIJ7C,UAAf,EECe8C,OAff,WACmBjH,eACSG,yBAAc,CAAEC,eAAgB,OAD1D,IAEQ6D,EAAMD,eAANC,EAER,OACE,sBAAKrE,UAAU,OAAf,UACE,cAACsH,GAAD,IACA,4BAAIjD,EAAE,UACN,cAAC,IAAD,CAAQ/L,QAAS,kBAAMiM,GAAKgD,eAAe,OAA3C,kCACA,cAAC,IAAD,CAAQjP,QAAS,kBAAMiM,GAAKgD,eAAe,OAA3C,yB,UCtBS,OAA0B,mCCiK1BC,OAlJf,WACE,IAAMjR,EAAU4J,eACVzE,EAAW0E,eACXhC,EAAOiC,cAAY,SAAA1I,GAAK,uBAAIA,EAAMyD,YAAV,aAAI,EAAYgD,QACxCkC,EAAoBC,yBAAc,CAAEC,eAAgB,OAClD6D,EAAMD,eAANC,EAER5D,qBAAU,WACJrC,IACEA,EAAKP,OAASlH,EAAMK,MACtBT,EAAQuH,QAAQ,UAEZvH,EAAQkR,SAAS9P,MACnBpB,EAAQmR,SAERnR,EAAQuH,QAAQ,QAIrB,CAACM,IAEJ,IAAMsC,EAAmBC,OAAaC,MAAM,CAC1CC,SAAUF,OAEPG,SAAS,2BACTC,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACRC,QAAQ,YAAa,CACpBtD,QAAS,gDAEbwF,MAAOxC,OAEJyC,OACApC,IAAI,GAAI,yCACRqC,MAAM,SACNF,MAAM,iBACNrC,SAAS,0BAGR6G,EAAc,SAAAtG,GAClB3F,EACE5C,EAAc6C,IAAd,2BAAuB0F,GAAvB,IAA+B8B,MAAO9B,EAAO8B,MAAMI,mBAIjDjC,EAAiB,SAACC,EAASC,EAAOH,GAClCE,GAAyB,UAAdC,EAAMrC,KACnBwI,EAAYtG,IAIhB,OACE,sBAAKtD,GAAG,KAAR,UACE,sBAAKA,GAAG,UAAR,UACE,mBAAG0D,KAAK,IAAI5B,MAAO,CAAE6B,eAAgB,OAAQC,MAAO,SAApD,SACE,qBAAKC,IAAKC,GAAMC,IAAI,SAAShC,MAAO,QAEtC,qBAAK/B,GAAG,WAAR,SACE,cAAC,KAAD,CACEgE,cAAe,CACblB,SAAU,GACVsC,MAAO,IAETnB,gBAAgB,EAChBtB,iBAAkBA,EAClBuB,SAAU,SAAAZ,GAAM,OAAIsG,EAAYtG,IAPlC,SASG,YASM,IARLa,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,aACAf,EAKI,EALJA,OACAE,EAII,EAJJA,QACAc,EAGI,EAHJA,OAEAC,GACI,EAFJC,QAEI,EADJD,iBAEA,OACE,eAAC,KAAD,CAAMtC,UAAU,YAAhB,UACE,sBAAMjC,GAAG,aAAT,iDAGA,cAAC,GAAD,CACEiC,UAAU,WACVwC,MAAOnB,EAAO8B,MACdV,SAAUP,EAAa,SACvBQ,aAAc,kBAAMJ,EAAgB,UACpCK,OAAQR,EAAW,SACnBS,YAAayB,EAAE,gBACfxB,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOc,QAEhB,cAAC,GAAD,cACEnD,UAAU,WACVhI,KAAK,WACLyK,SAAUP,EAAa,YACvBQ,aAAc,kBAAMJ,EAAgB,aACpCE,MAAOnB,EAAOR,SACd8B,OAAQR,EAAW,YACnBS,YAAayB,EAAE,mBACfxB,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOxB,UAThB,OAUO,aAEP,sBAAKb,UAAU,YAAf,UACE,cAAC,IAAD,CACEH,MAAO,CAAE4D,QAAS,GAClB9B,MAAM,UACN3J,KAAK,OACLM,QAAS,kBAAM/B,EAAQyH,KAAK,YAJ9B,8BAQA,gCACE,gEACA,cAAC,IAAD,CACE6B,MAAO,CAAE4D,QAAS,GAClB9B,MAAM,UACN3J,KAAK,OACLM,QAAS,kBAAM/B,EAAQyH,KAAK,YAJ9B,2BAUJ,cAAC,IAAD,CACED,GAAG,WACHgF,UAAWxB,EACXvJ,KAAK,UACLM,QAAS8J,EAJX,gCAcX9B,GACC,qBAAKvC,GAAG,QAAQ8B,MAAO,CAAEmD,gBAAgB,OAAD,OAAS4E,GAAT,YC3JjC,OAA0B,mCC2K1BC,OA7Jf,WACE,IAAMtR,EAAU4J,eACVzE,EAAW0E,eACXhC,EAAOiC,cAAY,SAAA1I,GAAK,uBAAIA,EAAMyD,YAAV,aAAI,EAAYgD,QACxCkC,EAAoBC,yBAAc,CAAEC,eAAgB,OAE1DC,qBAAU,WACJrC,GACF7H,EAAQuH,QAAQ,OAEjB,CAACM,IAEJ,IAAMsC,EAAmBC,OAAaC,MAAM,CAC1CuC,MAAOxC,OAEJyC,OACApC,IAAI,GAAI,yCACRqC,MAAM,SACNF,MAAM,iBACNrC,SAAS,wBACZD,SAAUF,OAEPG,SAAS,2BACTC,IAAI,EAAG,+CACPC,IAAI,GAAI,+CACRC,QAAQ,YAAa,CACpBtD,QAAS,gDAEbuI,SAAUvF,OAEPyC,OACAtC,SAAS,2BACTC,IAAI,EAAG,gDACPC,IAAI,GAAI,gDACRC,QACC,yNACA,CACEtD,QAAS,wBAKXmK,EAAe,SAAAzG,GACnB3F,EACExC,EAAcyC,IAAd,2BACK0F,GADL,IAEE8B,MAAO9B,EAAO8B,MAAMI,cACpB1F,KAAMlH,EAAMM,kBAKZqK,EAAiB,SAACC,EAASC,EAAOH,GAClCE,GAAyB,UAAdC,EAAMrC,KACnB2I,EAAazG,IAIjB,OACE,sBAAKtD,GAAG,KAAR,UACE,sBAAKA,GAAG,UAAR,UACE,mBAAG0D,KAAK,IAAI5B,MAAO,CAAE6B,eAAgB,OAAQC,MAAO,SAApD,SACE,qBAAKC,IAAKC,GAAMC,IAAI,SAAShC,MAAO,QAEtC,qBAAK/B,GAAG,WAAR,SACE,cAAC,KAAD,CACEgE,cAAe,CACboB,MAAO,GACPtC,SAAU,GACVqF,SAAU,IAEZlE,gBAAgB,EAChBtB,iBAAkBA,EAClBuB,SAAU,SAAAZ,GAAM,OAAIyG,EAAazG,IARnC,SAUG,YASM,IARLa,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,aACAf,EAKI,EALJA,OACAE,EAII,EAJJA,QACAc,EAGI,EAHJA,OAEAC,GACI,EAFJC,QAEI,EADJD,iBAEA,OACE,eAAC,KAAD,CAAMtC,UAAU,YAAhB,UACE,sBAAMjC,GAAG,aAAT,8CACA,cAAC,GAAD,CACEiC,UAAU,WACVwC,MAAOnB,EAAO6E,SACdzD,SAAUP,EAAa,YACvBQ,aAAc,kBAAMJ,EAAgB,aACpCK,OAAQR,EAAW,YACnBS,YAAY,YACZC,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAO6D,WAEhB,cAAC,GAAD,CACElG,UAAU,WACVwC,MAAOnB,EAAO8B,MACdV,SAAUP,EAAa,SACvBQ,aAAc,kBAAMJ,EAAgB,UACpCK,OAAQR,EAAW,SACnBS,YAAY,QACZC,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOc,QAEhB,cAAC,GAAD,cACEnD,UAAU,WACVhI,KAAK,WACLyK,SAAUP,EAAa,YACvBQ,aAAc,kBAAMJ,EAAgB,aACpCE,MAAOnB,EAAOR,SACd8B,OAAQR,EAAW,YACnBS,YAAY,WACZC,WAAY,SAAArB,GAAK,OAAIF,EAAeC,EAASC,EAAOH,IACpD9E,MAAO8F,EAAOxB,UAThB,OAUO,aAEP,sBAAKhB,MAAO,CAAE2D,UAAW,WAAYzD,aAAc,IAAnD,UACE,6DACA,cAAC,IAAD,CACEF,MAAO,CAAE4D,QAAS,GAClB9B,MAAM,UACN3J,KAAK,OACLM,QAAS,kBACP/B,EAAQyH,KAAK,CACXC,SAAU,UACVtG,MAAO,CAAEqE,KAAK,cAPpB,wBAcF,cAAC,IAAD,CACE+B,GAAG,WACHgF,UAAWxB,EACXvJ,KAAK,UACLM,QAAS8J,EAJX,gCAcX9B,GACC,qBAAKvC,GAAG,QAAQ8B,MAAO,CAAEmD,gBAAgB,OAAD,OAAS+E,GAAT,Y,8BC7IjCC,OAZf,WACE,OACE,eAAC,KAAD,CAAQzR,QAASA,EAAjB,UACE,cAAC,KAAD,CAAO0R,OAAK,EAACC,KAAK,IAAIC,UAAWd,KACjC,cAAC,KAAD,CAAOa,KAAK,UAAUC,UAAWX,KACjC,cAAC,KAAD,CAAOU,KAAK,UAAUC,UAAWN,KACjC,cAAC,KAAD,CAAOK,KAAK,UAAUC,UAAWjF,KACjC,cAAC,KAAD,CAAOgF,KAAK,gBAAgBC,UAAWlI,SCP9BmI,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCMdQ,KAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAU7N,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAa8N,QAAS,KAAMtJ,UAAWA,GAAvC,SACE,eAAC,KAAYuJ,SAAb,CACEzG,MAAO,CACLxC,UAAW,sBACXH,MAAO,CAAEqJ,cAAe,WAH5B,UAME,cAAC,GAAD,IACA,cAAC,EAAD,eAMVC,SAASC,eAAe,SAM1BhB,O","file":"static/js/main.0371e729.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory({ forceRefresh: true })\r\n\r\nexport const DOMAIN = 'https://coursedo.herokuapp.com/api'\r\n// export const DOMAIN = 'http://localhost:3001'\r\nexport const __DEV__ = false\r\n\r\nexport const LIMIT_ITEMS = 12\r\nexport const COLOR = {\r\n  primary1: '#FF8A00',\r\n  primary2: '#FFC000',\r\n  mainBlack: '#5C5C5C',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport const MODAL_TYPE = {\r\n  NORMAL: 'NORMAL',\r\n  CHOICE: 'CHOICE'\r\n}\r\n\r\nexport const ROLES = Object.freeze({\r\n  STUDENT: 0,\r\n  TEACHER: 1,\r\n  ADMIN: 2,\r\n  NOT_VERIFIED: 3\r\n})\r\n\r\nexport const DEFAULT_PASSWORD = '12345678'\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map(i =>\r\n          ['string', 'number'].indexOf(typeof i) === -1\r\n            ? JSON.stringify(i, null, ' ')\r\n            : i\r\n        )\r\n        .join(' ')\r\n    )\r\n  }\r\n}\r\n","import { Modal, Typography, Button } from 'antd'\r\nimport React from 'react'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nexport default class GlobalModal extends React.Component {\r\n  static instance = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    GlobalModal.instance = this\r\n    this.state = {\r\n      isShow: false,\r\n      title: '',\r\n      content: '',\r\n      type: MODAL_TYPE.NORMAL,\r\n      onPress: () => {}\r\n    }\r\n  }\r\n\r\n  static alertMessage = (\r\n    iTitle = 'Information',\r\n    iContent = 'An unexpected error has occured. Try again later.',\r\n    iType = MODAL_TYPE.NORMAL,\r\n    onPress = () => {}\r\n  ) => {\r\n    GlobalModal.instance.setState({\r\n      isShow: true,\r\n      title: iTitle,\r\n      content: iContent,\r\n      type: iType,\r\n      onPress\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    GlobalModal.instance.setState({ isShow: false })\r\n  }\r\n\r\n  handleOk = () => {\r\n    GlobalModal.instance.state.onPress()\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  handleCancel = () => {\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title={GlobalModal.instance.state.title}\r\n        visible={GlobalModal.instance.state.isShow}\r\n        centered\r\n        onOk={GlobalModal.instance.handleOk}\r\n        onCancel={GlobalModal.instance.handleCancel}\r\n        footer={\r\n          GlobalModal.instance.state.type === MODAL_TYPE.NORMAL\r\n            ? [\r\n                <Button\r\n                  key=\"okButton\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                  size=\"large\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n            : [\r\n                <Button\r\n                  key=\"cancelButton\"\r\n                  onClick={GlobalModal.instance.handleCancel}\r\n                  size=\"large\"\r\n                >\r\n                  Cancel\r\n                </Button>,\r\n                <Button\r\n                  key=\"okButton\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n        }\r\n      >\r\n        <Text>{GlobalModal.instance.state.content}</Text>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SignInRequest = defineAction('SIGNIN_REQUEST')\r\nexport const SignInRequestSuccess = defineAction('SIGNIN_REQUEST_SUCCESS')\r\nexport const SignInRequestFailed = defineAction('SIGNIN_REQUEST_FAILED')\r\n\r\nexport const SignUpRequest = defineAction('SIGNUP_REQUEST')\r\nexport const SignUpRequestSuccess = defineAction('SIGNUP_REQUEST_SUCCESS')\r\nexport const SignUpRequestFailed = defineAction('SIGNUP_REQUEST_FAILED')\r\n\r\nexport const ResetPassword = defineAction('RESET_PASSWORD_REQUEST')\r\nexport const ResetPasswordSuccess = defineAction('RESET_PASSWORD_SUCCESS')\r\nexport const ResetPasswordFailed = defineAction('RESET_PASSWORD_FAILED')\r\n\r\nexport const CreatePassword = defineAction('CREATE_PASSWORD_REQUEST')\r\nexport const CreatePasswordSuccess = defineAction('CREATE_PASSWORD_SUCCESS')\r\nexport const CreatePasswordFailed = defineAction('CREATE_PASSWORD_FAILED')\r\n\r\nexport const ChangePassword = defineAction('CHANGE_PASSWORD_REQUEST')\r\nexport const ChangePasswordSuccess = defineAction('CHANGE_PASSWORD_SUCCESS')\r\nexport const ChangePasswordFailed = defineAction('CHANGE_PASSWORD_FAILED')\r\n\r\nexport const GetProfile = defineAction('GET_PROFILE_REQUEST')\r\nexport const GetProfileSuccess = defineAction('GET_PROFILE_SUCCESS')\r\nexport const GetProfileFailed = defineAction('GET_PROFILE_FAILED')\r\n\r\nexport const UpdateProfile = defineAction('UPDATE_PROFILE_REQUEST')\r\nexport const UpdateProfileSuccess = defineAction('UPDATE_PROFILE_SUCCESS')\r\nexport const UpdateProfileFailed = defineAction('UPDATE_PROFILE_FAILED')\r\n\r\nexport const VerifyEmail = defineAction('VERIFY_EMAIL')\r\nexport const VerifyEmailSuccess = defineAction('VERIFY_EMAIL_SUCCESS')\r\nexport const VerifyEmailFailed = defineAction('VERIFY_EMAIL_FAILED')\r\n\r\nexport const GetWatchlist = defineAction('GET_WATCHLIST_REQUEST')\r\nexport const GetWatchlistSuccess = defineAction('GET_WATCHLIST_SUCCESS')\r\nexport const GetWatchlistFailed = defineAction('GET_WATCHLIST_FAILED')\r\n\r\nexport const RefreshToken = defineAction('REFRESH_TOKEN_REQUEST')\r\nexport const RefreshTokenSuccess = defineAction('REFRESH_TOKEN_SUCCESS')\r\nexport const RefreshTokenFailed = defineAction('REFRESH_TOKEN_FAILED')\r\n\r\nexport const SignOut = defineAction('SIGNOUT_REQUEST')\r\n\r\nexport const EmptyAction = defineAction('EMPTY_ACTION')\r\n","import axios from 'axios'\r\nimport { store } from 'core/store'\r\nimport { RefreshToken } from 'pages/SignIn/redux/actions'\r\nimport { from } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\nimport { DOMAIN, log as SysLog } from 'ultis/functions'\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi'\r\n  const parameters = param.param\r\n  const { token, prevLogin, refreshToken } = store.getState().Auth\r\n  if (prevLogin) {\r\n    if (new Date().getTime() - prevLogin > 86000000) {\r\n      store.dispatch(RefreshToken.get({ accessToken: token, refreshToken }))\r\n    }\r\n  }\r\n  const headers = token\r\n    ? {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language,\r\n        Authorization: token\r\n      }\r\n    : {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        'Access-Control-Allow-Origin': true,\r\n        'Accept-Language': language\r\n      }\r\n\r\n  return from(\r\n    axios\r\n      .request({\r\n        url,\r\n        timeout: 15000,\r\n        headers,\r\n        method: param.method || 'POST',\r\n        data: parameters,\r\n        ...(param.method === 'GET'\r\n          ? { params: parameters, data: {} }\r\n          : { data: parameters })\r\n      })\r\n      .catch(error => {\r\n        return Promise.resolve(error.response)\r\n      })\r\n  ).pipe(\r\n    map(result => {\r\n      return result\r\n    }),\r\n    tap(result => log(url, parameters, result))\r\n  )\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------'\r\n  )\r\n}\r\n","import GlobalModal from 'components/GlobalModal'\r\nimport { replace } from 'connected-react-router'\r\nimport { store } from 'core/store'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { history, MODAL_TYPE, ROLES } from 'ultis/functions'\r\nimport {\r\n  ChangePassword,\r\n  ChangePasswordFailed,\r\n  ChangePasswordSuccess,\r\n  CreatePassword,\r\n  CreatePasswordFailed,\r\n  CreatePasswordSuccess,\r\n  GetProfile,\r\n  GetProfileFailed,\r\n  GetProfileSuccess,\r\n  GetWatchlist,\r\n  GetWatchlistFailed,\r\n  GetWatchlistSuccess,\r\n  RefreshToken,\r\n  RefreshTokenFailed,\r\n  RefreshTokenSuccess,\r\n  ResetPassword,\r\n  ResetPasswordFailed,\r\n  ResetPasswordSuccess,\r\n  SignInRequest,\r\n  SignInRequestFailed,\r\n  SignInRequestSuccess,\r\n  SignOut,\r\n  SignUpRequest,\r\n  SignUpRequestFailed,\r\n  SignUpRequestSuccess,\r\n  UpdateProfile,\r\n  UpdateProfileFailed,\r\n  UpdateProfileSuccess,\r\n  VerifyEmail,\r\n  VerifyEmailFailed,\r\n  VerifyEmailSuccess\r\n} from './actions'\r\n\r\nconst signinEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignInRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/login',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200 && result.data?.authenticated) {\r\n            return SignInRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage(\r\n            'Information',\r\n            'Email or password may not correct. Please try again.'\r\n          )\r\n          return SignInRequestFailed.get(result.data.message)\r\n        }),\r\n        catchError(error => {\r\n          return SignInRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst signupEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(SignUpRequest.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/signup',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 201) {\r\n            if (action.payload.role === ROLES.TEACHER) {\r\n              // store.dispatch(GetUsers.get({ role: ROLES.TEACHER }))\r\n            } else {\r\n              store.dispatch(replace('/signin', { from: '/signup' }))\r\n              GlobalModal.alertMessage(\r\n                'Information',\r\n                'Sign up succeed. Please sign in to continue.'\r\n              )\r\n            }\r\n            return SignUpRequestSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return SignUpRequestFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return SignUpRequestFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst changePassEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(ChangePassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: `users/${action.payload.id}/changePassword`,\r\n        param: action.payload.data\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              'Change password succeed. Please sign in to continue.',\r\n              MODAL_TYPE.NORMAL,\r\n              () => {\r\n                store.dispatch(SignOut.get())\r\n                history.push({\r\n                  pathname: '/signin',\r\n                  state: { from: `/profile` }\r\n                })\r\n              }\r\n            )\r\n            return ChangePasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return ChangePasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return ChangePasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst getProfileEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(GetProfile.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: `users/${action.payload}`\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            return GetProfileSuccess.get(result.data)\r\n          }\r\n          return GetProfileFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return GetProfileFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst getWatchlistEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(GetWatchlist.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: `users/${action.payload}/watchlist`\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            return GetWatchlistSuccess.get(result.data)\r\n          }\r\n          return GetWatchlistFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return GetWatchlistFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst updateUserProfileEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(UpdateProfile.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'PATCH',\r\n        url: `users/${action.payload.id}`,\r\n        param: action.payload.data\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetProfile.get(action.payload.id))\r\n            GlobalModal.alertMessage('Information', 'Update profile succeed.')\r\n            return UpdateProfileSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return UpdateProfileFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return UpdateProfileFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst refreshTokenEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(RefreshToken.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/refresh',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            return RefreshTokenSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return RefreshTokenFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return RefreshTokenFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst resetPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(ResetPassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/resetPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/'))\r\n            )\r\n            return ResetPasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return ResetPasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return ResetPasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst createPasswordEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(CreatePassword.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/createPassword',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/signin'))\r\n            )\r\n            return CreatePasswordSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage()\r\n          return CreatePasswordFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return CreatePasswordFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nconst verifyEmailEpic$ = action$ =>\r\n  action$.pipe(\r\n    ofType(VerifyEmail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'auth/verifyEmail',\r\n        param: action.payload\r\n      }).pipe(\r\n        map(result => {\r\n          if (result.status === 200) {\r\n            GlobalModal.alertMessage(\r\n              'Information',\r\n              result.data.message,\r\n              MODAL_TYPE.NORMAL,\r\n              () => store.dispatch(replace('/'))\r\n            )\r\n            return VerifyEmailSuccess.get(result.data)\r\n          }\r\n          GlobalModal.alertMessage('Information', result.data?.message)\r\n          return VerifyEmailFailed.get(result)\r\n        }),\r\n        catchError(error => {\r\n          return VerifyEmailFailed.get(error)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\nexport const authEpics = combineEpics(\r\n  signinEpic$,\r\n  signupEpic$,\r\n  resetPasswordEpic$,\r\n  createPasswordEpic$,\r\n  verifyEmailEpic$,\r\n  changePassEpic$,\r\n  updateUserProfileEpic$,\r\n  getProfileEpic$,\r\n  getWatchlistEpic$,\r\n  refreshTokenEpic$\r\n)\r\n","import { authEpics } from 'pages/SignIn/redux/epics'\r\nimport { combineEpics } from 'redux-observable'\r\n\r\nexport const rootEpic = combineEpics(authEpics)\r\n","import {\r\n  ChangePassword,\r\n  ChangePasswordFailed,\r\n  ChangePasswordSuccess,\r\n  GetProfile,\r\n  GetProfileFailed,\r\n  GetProfileSuccess,\r\n  GetWatchlist,\r\n  GetWatchlistFailed,\r\n  GetWatchlistSuccess,\r\n  RefreshTokenSuccess,\r\n  SignInRequestSuccess,\r\n  SignOut,\r\n  UpdateProfile,\r\n  UpdateProfileFailed,\r\n  UpdateProfileSuccess\r\n} from './actions'\r\nconst initialState = {\r\n  token: null,\r\n  refreshToken: null,\r\n  user: null,\r\n  isLoading: false,\r\n  isLoadingProfile: false,\r\n  watchlist: [],\r\n  prevLogin: null\r\n}\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SignInRequestSuccess.type:\r\n      return {\r\n        ...state,\r\n        token: action.payload.accessToken,\r\n        refreshToken: action.payload.refreshToken,\r\n        user: action.payload,\r\n        prevLogin: new Date().getTime()\r\n      }\r\n    case UpdateProfile.type:\r\n      return { ...state, isLoading: true }\r\n    case UpdateProfileSuccess.type:\r\n      return { ...state, isLoading: false }\r\n    case UpdateProfileFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetProfile.type:\r\n      return { ...state, isLoadingProfile: true }\r\n    case GetProfileSuccess.type:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n        isLoadingProfile: false\r\n      }\r\n    case GetProfileFailed.type:\r\n      return { ...state, isLoadingProfile: false }\r\n    case GetWatchlist.type:\r\n      return { ...state, isLoading: true }\r\n    case GetWatchlistSuccess.type:\r\n      return {\r\n        ...state,\r\n        watchlist: action.payload,\r\n        isLoading: false\r\n      }\r\n    case GetWatchlistFailed.type:\r\n      return { ...state, isLoading: false }\r\n    // case AddToWatchList.type:\r\n    //   return { ...state, isLoading: true }\r\n    // case AddToWatchListSuccess.type:\r\n    //   return {\r\n    //     ...state,\r\n    //     watchlist: action.payload,\r\n    //     isLoading: false\r\n    //   }\r\n    // case AddToWatchListFailed.type:\r\n    //   return { ...state, isLoading: false }\r\n    case RefreshTokenSuccess.type:\r\n      return {\r\n        ...state,\r\n        token: action.payload.accessToken,\r\n        user: { ...state.user, token: action.payload.accessToken },\r\n        prevLogin: new Date().getTime()\r\n      }\r\n    case ChangePassword.type:\r\n      return { ...state, isLoading: true }\r\n    case ChangePasswordSuccess.type:\r\n      return { ...state, isLoading: false }\r\n    case ChangePasswordFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SignOut.type:\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { connectRouter } from 'connected-react-router'\r\nimport { authReducer } from 'pages/SignIn/redux/reducer'\r\nimport { combineReducers } from 'redux'\r\nimport { history } from 'ultis/functions'\r\n\r\nexport const rootReducer = combineReducers({\r\n  Auth: authReducer,\r\n  router: connectRouter(history)\r\n})\r\n","import { routerMiddleware } from 'connected-react-router'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport { createEpicMiddleware } from 'redux-observable'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { history, __DEV__ } from 'ultis/functions'\r\nimport { rootEpic } from './epic'\r\nimport { rootReducer } from './reducer'\r\n\r\nconst epicMiddleware = createEpicMiddleware()\r\n\r\nconst applyMiddlewarePro = applyMiddleware(\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\nconst applyMiddlewareDev = applyMiddleware(\r\n  logger,\r\n  epicMiddleware,\r\n  routerMiddleware(history)\r\n)\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  __DEV__ ? compose(applyMiddlewareDev) : compose(applyMiddlewarePro)\r\n)\r\n\r\nepicMiddleware.run(rootEpic)\r\n\r\nexport const persistor = persistStore(store)\r\n","import { Input } from 'antd'\r\nimport 'pages/SignIn/signin.css'\r\nimport React from 'react'\r\n\r\nfunction CInput(props) {\r\n  return (\r\n    <div style={{ width: '100%', marginBottom: 12 }}>\r\n      <Input {...props} />\r\n      {props.error && <span className=\"errorStyle\">{props.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CInput\r\n","export default __webpack_public_path__ + \"static/media/forgot_password.88496ed7.jpg\";","export default __webpack_public_path__ + \"static/media/logo.19a91f5e.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { CreatePassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction CreatePasswordPage() {\r\n  const param = useParams()\r\n  const { token } = param\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user || !token) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    confirm: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      })\r\n      .oneOf(\r\n        [yup.ref('password'), null],\r\n        'Confirm password must be the same as password'\r\n      )\r\n  })\r\n\r\n  const handleCreate = values => {\r\n    dispatch(\r\n      CreatePassword.get({\r\n        password: values.password,\r\n        token: token\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleCreate(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"logo\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              confirm: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleCreate(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Input new password to continue</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.password}\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"New password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.confirm}\r\n                    onChange={handleChange('confirm')}\r\n                    onTouchStart={() => setFieldTouched('confirm')}\r\n                    onBlur={handleBlur('confirm')}\r\n                    placeholder=\"Confirm password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.confirm}\r\n                    type=\"password\"\r\n                  />\r\n                  <Button\r\n                    style={{ marginTop: 24 }}\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePasswordPage\r\n","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { ResetPassword } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport forgotPic from 'assets/images/forgot_password.jpg'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction ForgotPassword() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleForgot = values => {\r\n    dispatch(\r\n      ResetPassword.get({\r\n        ...values,\r\n        email: values.email.toLowerCase()\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleForgot(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"forgot\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleForgot(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Ok let’s fetch you ya’ login details\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/forgot` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Back to Sign Up\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Proceed\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${forgotPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\nimport logo from 'assets/logo.png'\r\nimport { Layout } from 'antd'\r\nconst { Footer } = Layout\r\n\r\nfunction FooterComponent() {\r\n  return (\r\n    <Footer\r\n      style={{ backgroundColor: '#212121', textAlign: 'center', width: '100%' }}\r\n    >\r\n      <img\r\n        src={logo}\r\n        width=\"100\"\r\n        height=\"100\"\r\n        style={{ objectFit: 'contain' }}\r\n      />\r\n      <p>All Right Reserved | COURSEDO 2021</p>\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default FooterComponent\r\n","import { MenuOutlined, UserOutlined } from '@ant-design/icons'\r\nimport { Anchor, Avatar, Button, Drawer, Input, Menu, Popover } from 'antd'\r\nimport { SignOut } from 'pages/SignIn/redux/actions'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst { Search } = Input\r\nconst { Link } = Anchor\r\n\r\nfunction AppHeader(props) {\r\n  const [visible, setVisible] = useState(false)\r\n  const history = useHistory()\r\n  const user = useSelector(state => state.Auth.user)\r\n  const dispatch = useDispatch()\r\n  const { t, i18n } = useTranslation()\r\n\r\n  const showDrawer = () => {\r\n    console.info('show')\r\n    setVisible(true)\r\n  }\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const studentPopover = (\r\n    <Menu style={{ width: 200 }}>\r\n      <Menu.Item\r\n        key={'profile'}\r\n        onClick={() => {\r\n          history.push(`/profile`)\r\n        }}\r\n      >\r\n        Profile\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key={'course'}\r\n        onClick={() => {\r\n          history.push(`/my-courses`)\r\n        }}\r\n      >\r\n        My courses\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key={'logout'}\r\n        onClick={() => {\r\n          dispatch(SignOut.get())\r\n        }}\r\n      >\r\n        Log Out\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  const adminPopover = (\r\n    <Menu style={{ width: 200 }}>\r\n      <Menu.Item\r\n        key={'profile'}\r\n        onClick={() => {\r\n          history.push(`/profile`)\r\n        }}\r\n      >\r\n        Profile\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key={'dashboard'}\r\n        onClick={() => {\r\n          history.push(`/admin`)\r\n        }}\r\n      >\r\n        Dashboard\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key={'logout'}\r\n        onClick={() => {\r\n          dispatch(SignOut.get())\r\n        }}\r\n      >\r\n        Log Out\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"header\">\r\n        <div style={{ display: 'flex' }}>\r\n          <div id=\"logo\">\r\n            <span\r\n              id=\"logoText\"\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: '/',\r\n                  state: { from: `/` }\r\n                })\r\n              }\r\n            >\r\n              MAM MAM\r\n            </span>\r\n          </div>\r\n          {/* <div>\r\n            {user?.role !== 1 ? (\r\n              <Dropdown\r\n                overlay={Categories(categoryList)}\r\n                style={{ marginBottom: 30 }}\r\n              >\r\n                <a id=\"categoriesTxt\" className=\"ant-dropdown-link\">\r\n                  Categories\r\n                </a>\r\n              </Dropdown>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div> */}\r\n        </div>\r\n        <div className=\"mobileHidden\">\r\n          {!(props?.from === 'addCourse') && user?.role === ROLES.TEACHER && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ borderRadius: 50, marginRight: 24 }}\r\n              onClick={() => history.push('/create')}\r\n            >\r\n              Add new course\r\n            </Button>\r\n          )}\r\n          {user?.role !== 1 ? (\r\n            <div>\r\n              <Search\r\n                style={{ width: '30vw' }}\r\n                placeholder=\"Search for Courses i.e web-development\"\r\n                enterButton=\"Search\"\r\n                size=\"large\"\r\n                onSearch={value => {\r\n                  const keyword = value.trim()\r\n                  if (/\\S+/.test(keyword)) {\r\n                    // dispatch(UpdateSearch.get())\r\n                    history.push({\r\n                      pathname: `/courses`,\r\n                      search: `keyword=${keyword}`,\r\n                      state: { from: `/` }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n              <Button\r\n                shape=\"round\"\r\n                style={{ borderWidth: 0 }}\r\n                id=\"btnTxt\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: '/courses',\r\n                    state: { from: `/` }\r\n                  })\r\n                }\r\n              >\r\n                Courses\r\n              </Button>\r\n              <Button\r\n                shape=\"round\"\r\n                style={{ borderWidth: 0, marginRight: 30 }}\r\n                id=\"btnTxt\"\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: '/about',\r\n                    state: { from: `/` }\r\n                  })\r\n                }\r\n              >\r\n                About\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n\r\n          {user ? (\r\n            user?.avatar ? (\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                content={\r\n                  user?.role === ROLES.ADMIN ? adminPopover : studentPopover\r\n                }\r\n                trigger=\"click\"\r\n              >\r\n                <Avatar size={48} src={user?.avatar} />\r\n              </Popover>\r\n            ) : (\r\n              <Popover\r\n                placement=\"bottomRight\"\r\n                content={\r\n                  user?.role === ROLES.ADMIN ? adminPopover : studentPopover\r\n                }\r\n                trigger=\"click\"\r\n              >\r\n                <Avatar size={48} icon={<UserOutlined />} />\r\n              </Popover>\r\n            )\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ borderRadius: 50 }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: '/signin',\r\n                  state: { from: `/` }\r\n                })\r\n              }\r\n            >\r\n              {t('auth.login')}\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className=\"mobileVisible\">\r\n          <Button type=\"primary\" onClick={showDrawer}>\r\n            <MenuOutlined />\r\n          </Button>\r\n          <Drawer\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n          >\r\n            <Anchor targetOffset=\"65\">\r\n              {user?.role !== 1 ? (\r\n                <Search\r\n                  allowClear\r\n                  placeholder=\"Search\"\r\n                  onSearch={value => props.onSearch(value)}\r\n                  enterButton={'Search'}\r\n                />\r\n              ) : (\r\n                <div />\r\n              )}\r\n              {user ? (\r\n                <Popover\r\n                  placement=\"bottomRight\"\r\n                  content={\r\n                    user?.role === ROLES.ADMIN ? adminPopover : studentPopover\r\n                  }\r\n                  trigger=\"click\"\r\n                >\r\n                  <p\r\n                    className=\"ant-anchor-link\"\r\n                    style={{\r\n                      fontFamily: 'Source Sans Pro',\r\n                      fontWeight: 'bold',\r\n                      paddingTop: 10\r\n                    }}\r\n                  >\r\n                    {user.fullName}\r\n                  </p>\r\n                </Popover>\r\n              ) : (\r\n                <div />\r\n              )}\r\n              {user?.role !== 1 ? (\r\n                <div>\r\n                  {/* <Link href=\"#courses\" title=\"Courses\" /> */}\r\n                  <Link href=\"#about\" title=\"About\" />\r\n                </div>\r\n              ) : (\r\n                <div />\r\n              )}\r\n              {!(props?.from === 'addCourse') &&\r\n                user?.role === ROLES.TEACHER && (\r\n                  <Link href=\"#create\" title=\"Add new course\" />\r\n                )}\r\n              {!user ? (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Button\r\n                    type=\"primary\"\r\n                    style={{ borderRadius: 50, width: '80%', marginBlock: 10 }}\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: '/signin',\r\n                        state: { from: `/` }\r\n                      })\r\n                    }\r\n                  >\r\n                    {t('auth:login')}\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </Anchor>\r\n          </Drawer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import i18n from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\nimport { en, vi } from 'assets/i18n/strings'\r\n\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: en\r\n  },\r\n  vi: {\r\n    translation: vi\r\n  }\r\n}\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: 'en',\r\n    debug: true,\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  })\r\n\r\nexport default i18n\r\n","export const en = {\r\n  test: 'hi',\r\n  auth: {\r\n    login: 'Login',\r\n    signup: 'Sign up'\r\n  },\r\n  signin: {\r\n    email: 'Email',\r\n    password: 'Password'\r\n  }\r\n}\r\n\r\nexport const vi = {\r\n  test: 'chào',\r\n  auth: {\r\n    login: 'Đăng nhập',\r\n    signup: 'Đăng ký'\r\n  },\r\n  signin: {\r\n    email: 'Email',\r\n    password: 'Mật khẩu'\r\n  }\r\n}\r\n","import { Button } from 'antd'\r\nimport Footer from 'components/Footer'\r\nimport Header from 'components/Header'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { history } from 'ultis/functions'\r\nimport '../../components/Header/header.css'\r\nimport './home.css'\r\nimport { useTranslation } from 'react-i18next'\r\nimport i18n from 'ultis/i18n'\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <p>{t('test')}</p>\r\n      <Button onClick={() => i18n.changeLanguage('vi')}>Tiếng Việt</Button>\r\n      <Button onClick={() => i18n.changeLanguage('en')}>English</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/signin.07d692eb.png\";","import { Button } from 'antd'\r\nimport signinPic from 'assets/images/signin.png'\r\nimport logo from 'assets/logo.png'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport React, { useEffect } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport { SignInRequest } from './redux/actions'\r\nimport './signin.css'\r\n\r\nfunction SignIn() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.role === ROLES.ADMIN) {\r\n        history.replace('/admin')\r\n      } else {\r\n        if (history.location.state) {\r\n          history.goBack()\r\n        } else {\r\n          history.replace('/')\r\n        }\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email')\r\n  })\r\n\r\n  const handleLogin = values => {\r\n    dispatch(\r\n      SignInRequest.get({ ...values, email: values.email.toLowerCase() })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleLogin(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signin\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              password: '',\r\n              email: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleLogin(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">\r\n                    Sign in to your account to continue\r\n                  </span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder={t('signin.email')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder={t('signin.password')}\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div className=\"buttomBox\">\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() => history.push('/forgot')}\r\n                    >\r\n                      Forgot password?\r\n                    </Button>\r\n                    <div>\r\n                      <span>Don’t have an account? </span>\r\n                      <Button\r\n                        style={{ padding: 0 }}\r\n                        color=\"primary\"\r\n                        type=\"link\"\r\n                        onClick={() => history.push('/signup')}\r\n                      >\r\n                        Sign up\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signinPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","export default __webpack_public_path__ + \"static/media/signup.46c9af80.png\";","import { Button } from 'antd'\r\nimport CInput from 'components/CInput'\r\nimport { Form, Formik } from 'formik'\r\nimport { SignUpRequest } from 'pages/SignIn/redux/actions'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ROLES } from 'ultis/functions'\r\nimport * as yup from 'yup'\r\nimport '../SignIn/signin.css'\r\nimport signupPic from 'assets/images/signup.png'\r\nimport logo from 'assets/logo.png'\r\n\r\nfunction SignUp() {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.Auth?.user)\r\n  const isDesktopOrLaptop = useMediaQuery({ minDeviceWidth: 1224 })\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/')\r\n    }\r\n  }, [user])\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .trim()\r\n      .max(48, 'Email must have at most 48 characters')\r\n      .label('Email')\r\n      .email('Invalid email')\r\n      .required('* Please input email'),\r\n    password: yup\r\n      .string()\r\n      .required('* Please input password')\r\n      .min(8, 'Password must include at least 8 characters')\r\n      .max(48, 'Password must include at most 48 characters')\r\n      .matches(/(?=.{8,})/, {\r\n        message: 'Password must include at least 8 characters'\r\n      }),\r\n    fullName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Please input password')\r\n      .min(3, 'Full name must include at least 3 characters')\r\n      .max(64, 'Full name must include at most 48 characters')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Invalid full name'\r\n        }\r\n      )\r\n  })\r\n\r\n  const handleSignup = values => {\r\n    dispatch(\r\n      SignUpRequest.get({\r\n        ...values,\r\n        email: values.email.toLowerCase(),\r\n        role: ROLES.NOT_VERIFIED\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === 'Enter') {\r\n      handleSignup(values)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"bg\">\r\n      <div id=\"loginBg\">\r\n        <a href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\r\n          <img src={logo} alt=\"signup\" width={100} />\r\n        </a>\r\n        <div id=\"loginBox\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n              fullName: ''\r\n            }}\r\n            isInitialValid={false}\r\n            validationSchema={validationSchema}\r\n            onSubmit={values => handleSignup(values)}\r\n          >\r\n            {({\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              values,\r\n              isValid,\r\n              errors,\r\n              touched,\r\n              setFieldTouched\r\n            }) => {\r\n              return (\r\n                <Form className=\"formStyle\">\r\n                  <span id=\"loginStyle\">Please create a new account here</span>\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.fullName}\r\n                    onChange={handleChange('fullName')}\r\n                    onTouchStart={() => setFieldTouched('fullName')}\r\n                    onBlur={handleBlur('fullName')}\r\n                    placeholder=\"Full name\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.fullName}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    value={values.email}\r\n                    onChange={handleChange('email')}\r\n                    onTouchStart={() => setFieldTouched('email')}\r\n                    onBlur={handleBlur('email')}\r\n                    placeholder=\"Email\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.email}\r\n                  />\r\n                  <CInput\r\n                    className=\"inputBox\"\r\n                    type=\"password\"\r\n                    onChange={handleChange('password')}\r\n                    onTouchStart={() => setFieldTouched('password')}\r\n                    value={values.password}\r\n                    onBlur={handleBlur('password')}\r\n                    placeholder=\"Password\"\r\n                    onKeyPress={event => handleKeyPress(isValid, event, values)}\r\n                    error={errors.password}\r\n                    type=\"password\"\r\n                  />\r\n                  <div style={{ alignSelf: 'flex-end', marginBottom: 34 }}>\r\n                    <span>Already have an account? </span>\r\n                    <Button\r\n                      style={{ padding: 0 }}\r\n                      color=\"primary\"\r\n                      type=\"link\"\r\n                      onClick={() =>\r\n                        history.push({\r\n                          pathname: '/signin',\r\n                          state: { from: `/signup` }\r\n                        })\r\n                      }\r\n                    >\r\n                      Sign in\r\n                    </Button>\r\n                  </div>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    disabled={!isValid}\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n      {isDesktopOrLaptop && (\r\n        <div id=\"imgBg\" style={{ backgroundImage: `url(${signupPic})` }} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import CreatePasswordPage from 'pages/CreatePassword'\nimport ForgotPassword from 'pages/ForgotPassword'\nimport Home from 'pages/Home'\nimport SignIn from 'pages/SignIn'\nimport SignUp from 'pages/SignUp'\nimport React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport 'slick-carousel/slick/slick-theme.css'\nimport 'slick-carousel/slick/slick.css'\nimport { history } from 'ultis/functions'\nimport './App.less'\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route path=\"/forgot\" component={ForgotPassword} />\n      <Route path=\"/reset/:token\" component={CreatePasswordPage} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ConfigProvider } from 'antd'\nimport GlobalModal from 'components/GlobalModal'\nimport { persistor, store } from 'core/store'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { IconContext } from 'react-icons'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport './index.css'\nimport './ultis/i18n'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider>\n        <PersistGate loading={null} persistor={persistor}>\n          <IconContext.Provider\n            value={{\n              className: 'react-icon-clasname',\n              style: { verticalAlign: 'middle' }\n            }}\n          >\n            <App />\n            <GlobalModal />\n          </IconContext.Provider>\n        </PersistGate>\n      </ConfigProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}